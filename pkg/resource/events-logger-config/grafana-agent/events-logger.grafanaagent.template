logging {
	level  = "info"
	format = "logfmt"
}

loki.source.kubernetes_events "local" {
	namespaces = {{ .ScrapedNamespaces }}
	forward_to = [loki.write.default.receiver]
}

remote.kubernetes.secret "credentials" {
	namespace = "kube-system"
	name = "{{ .SecretName }}"
}

loki.source.kubernetes_events "default" {
	namespaces = [default]
	forward_to = [loki.process.default.receiver]
}

// filter out events that are not related to giantswarm managed components
loki.process "default" {
	forward_to = [loki.write.default.receiver]

  stage.match {
      selector = `{kind=~"Node|ClusterPolicy"}`
      action = "keep"
  }
}

loki.write "default" {
	endpoint {
		url                = nonsensitive(remote.kubernetes.secret.credentials.data["{{ .LoggingURLKey }}"])
		tenant_id          = nonsensitive(remote.kubernetes.secret.credentials.data["{{ .LoggingTenantIDKey }}"])

		basic_auth {
			username = nonsensitive(remote.kubernetes.secret.credentials.data["{{ .LoggingUsernameKey }}"])
			password = remote.kubernetes.secret.credentials.data["{{ .LoggingPasswordKey }}"]
		}

		tls_config {
			insecure_skip_verify = {{ .InsecureSkipVerify }}
		}
	}
	external_labels = {
		installation = "{{ .Installation }}",
		cluster_id = "{{ .ClusterID }}",
		scrape_job = "kubernetes-events",
	}
}
