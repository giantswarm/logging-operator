# This file was generated by logging-operator.
# It configures Alloy to be used as a logging agent.
# - configMap is generated from logging.alloy.template and passed as a string
#   here and will be created by Alloy's chart.
# - Alloy runs as a daemonset, with required tolerations in order to scrape logs
#   from every machine in the cluster.
# - Running as root user is required in order to be able to read log files within
#   /var/log/journal and /run/log/journal directories.
# - NODENAME env var is used as additional label for kubernetes_audit logs.
alloy:
  alloy:
    configMap:
      create: true
      content: |-
{{ .AlloyConfig | indent 8 }}
    extraEnv:
    - name: NODENAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    envFrom:
    - secretRef:
        name: {{ .SecretName }}
    mounts:
      varlog: true
      dockercontainers: true
      extra:
      - name: runlogjournal
        mountPath: /run/log/journal
        readOnly: true
      # This is needed to allow alloy to create files when using readOnlyRootFilesystem
      - name: alloy-tmp
        mountPath: /tmp/alloy
      - name: alloy-namespaces
        mountPath: /etc/alloy-namespaces
        readOnly: true
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsUser: 0
      runAsGroup: 0
      runAsNonRoot: false
      seccompProfile:
        type: RuntimeDefault
  controller:
    type: daemonset
    extraContainers:
      - name: alloy-namespaces
        image: bitnami/kubectl:latest
        command:
          - /bin/bash
        args:
          - -c
          - while true; do
              kubectl get namespaces -l{{ .LoggingLabel }}=enabled -o jsonpath='{.items[*].metadata.name}' | sed "s/ /,/g" > /tmp/alloy-namespaces/namespaces-candidates;
              test ! -s /tmp/alloy-namespaces/namespaces-candidates && echo -n "giantswarm-nonexistent-namespace" > /tmp/alloy-namespaces/namespaces-candidates;
              diff -sq /tmp/alloy-namespaces/namespaces-candidates /tmp/alloy-namespaces/namespaces || cp /tmp/alloy-namespaces/namespaces-candidates /tmp/alloy-namespaces/namespaces;
              kubectl get namespaces -l{{ .LoggingLabel }}=enabled -o go-template='{{ range .items }}{{ printf "%s:%s" .metadata.name (or (index .metadata.labels "giantswarm.io/logging_tenant") "") }};{{ end }}' > /tmp/alloy-namespaces/namespaces-tenant-candidates;
              diff -sq /tmp/alloy-namespaces/namespaces-tenant-candidates /tmp/alloy-namespaces/namespaces-tenant || cp /tmp/alloy-namespaces/namespaces-tenant-candidates /tmp/alloy-namespaces/namespaces-tenant;
              sleep 5;
            done
        volumeMounts:
          - name: alloy-namespaces
            mountPath: /tmp/alloy-namespaces
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    volumes:
      extra:
      - name: runlogjournal
        hostPath:
          path: /run/log/journal
      - name: alloy-tmp
        emptyDir: {}
      - name: alloy-namespaces
        emptyDir: {}
