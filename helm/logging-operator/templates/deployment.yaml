apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "resource.default.name" . }}
  namespace: {{ include "resource.default.namespace" . }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      {{- include "labels.selector" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        releaseRevision: {{ .Release.Revision | quote }}
      labels:
        {{- include "labels.common" . | nindent 8 }}
    spec:
      volumes:
      - name: {{ include "name" . }}-configmap
        configMap:
          name: {{ include "resource.default.name"  . }}
          items:
          - key: config.yml
            path: config.yml
      serviceAccountName: {{ include "resource.default.name"  . }}
      securityContext:
        {{- with .Values.podSecurityContext.pod }}
          {{- . | toYaml | nindent 8 }}
        {{- end }}
      containers:
      - name: {{ include "name" . }}
        image: "{{ .Values.registry.domain }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        args:
        - daemon
        - --config.dirs=/var/run/{{ include "name" . }}/configmap/,/var/run/{{ include "name" . }}/secret/
        - --config.files=config,secret
        ports:
        - name: http
          containerPort: 8000
        volumeMounts:
        - name: {{ include "name" . }}-configmap
          mountPath: /var/run/{{ include "name" . }}/configmap/
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 30
          timeoutSeconds: 1
        securityContext:
          {{- with .Values.securityContext.container }}
            {{- . | toYaml | nindent 10 }}
          {{- end }}
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
