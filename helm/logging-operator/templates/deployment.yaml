apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "resource.default.name" . }}
  namespace: {{ include "resource.default.namespace" . }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      {{- include "labels.selector" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        releaseRevision: {{ .Release.Revision | quote }}
      labels:
        {{- include "labels.common" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "resource.default.name"  . }}
      securityContext:
        {{- with .Values.securityContext.pod }}
          {{- . | toYaml | nindent 8 }}
        {{- end }}
      containers:
      - name: {{ include "name" . }}
        image: "{{ .Values.registry.domain }}/{{ .Values.image.name }}:{{ default .Chart.Version .Values.image.tag }}"
        args:
        {{ if .Values.loggingOperator.vintageMode -}}
          - -vintage
        {{- end }}
        {{ if .Values.loggingOperator.loggingEnabled -}}
          - -enable-logging=true
        {{- else -}}
          - -enable-logging=false
        {{- end }}
        - -installation-name={{ .Values.managementCluster.name }}
        - -installation-provider={{ .Values.managementCluster.provider.kind }}
        - -installation-region={{ .Values.aws.region }}
        - -installation-base-domain={{ .Values.managementCluster.baseDomain }}
        {{ if eq .Values.managementCluster.provider.kind "capa" -}}
        env:
          - name: AWS_SHARED_CREDENTIALS_FILE
            value: /home/.aws/credentials
        {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 30
          timeoutSeconds: 1
        securityContext:
          {{- with .Values.securityContext.container }}
            {{- . | toYaml | nindent 10 }}
          {{- end }}
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
        {{ if eq .Values.managementCluster.provider.kind "capa" -}}
        volumeMounts:
          - mountPath: /home/.aws
            name: credentials
        {{- end }}
      {{ if eq .Values.managementCluster.provider.kind "capa" -}}
      volumes:
      - name: credentials
        secret:
          secretName: {{ include "resource.default.name" . }}-aws-credentials
      {{- end -}}
